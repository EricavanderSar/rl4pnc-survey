setup:
  nb_timesteps: &nb_timesteps 1_000
  checkpoint_freq: 500
  checkpoint_trainable_policies_only: True
  verbose: 1
  storage_path: ./runs #/Users/barberademol/Documents/GitHub/mahrl_grid2op/runs/ #/home3/s3374610/mahrl_grid2op/runs/

debugging:
  seed: &seed 14

training:
  # tunable parameters
  gamma: 0.95 # !grid_search [0.95, 0.99]
  lr: 0.003 # !grid_search [0.0005, 0.005, 0.05]
  vf_loss_coeff: 0.5
  entropy_coeff: 0.01
  clip_param: 0.2
  lambda_: 0.95
  sgd_minibatch_size: 32 # !grid_search [32, 64, 128]
  train_batch_size: 128
  model:
    fcnet_hiddens:
    - 256
    - 256
  _enable_learner_api: False

rl_module:
  _enable_rl_module_api: False

explore:
  exploration_config:
    type: EpsilonGreedy

callbacks:
  callbacks: !CustomMetricsCallback

framework:
  framework: torch

multi_agent:
  policy_mapping_fn: !policy_mapping_fn
  policies_to_train: ["reinforcement_learning_policy"]

environment:
  env_config:
    env_name: rte_case5_example
    num_agents: 3
    action_space: tennet
    lib_dir: /Users/ericavandersar/Documents/Python_Projects/Research/mahrl_grid2op/ #/Users/barberademol/Documents/GitHub/mahrl_grid2op/ # /home3/s3374610/mahrl_grid2op/
    max_tsteps: *nb_timesteps
    grid2op_kwargs:
      # general kwargs
      test: True
      reward_class: !LossReward
    seed: *seed
    rho_threshold: 0.95
