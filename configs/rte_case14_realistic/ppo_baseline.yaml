setup:
  max_ep_len: 8064
  nb_timesteps: &nb_timesteps 1_000
  checkpoint_freq: 5
  checkpoint_trainable_policies_only: True
  verbose: 0
  storage_path: ./runs #/Users/barberademol/Documents/GitHub/mahrl_grid2op/runs/ #/home3/s3374610/mahrl_grid2op/runs/
  folder_name: "Optina_test"
  experiment_name: "Case_14_Optuna"
  save_artifact: True
  optimize: True
  num_samples: 10

debugging:
  seed: &seed 14

training:
  # tunable parameters
  gamma: !quniform [0.95, 0.99, 0.01] #0.95 #
  lr: 0.003 # !qloguniform [0.0005, 0.005, 0.0001] #
  vf_loss_coeff: 0.5
  entropy_coeff: 0.01
  clip_param: 0.2
  lambda: 0.95
  num_sgd_iter: 4
  sgd_minibatch_size: 32 # !choice [32, 64, 128]
  train_batch_size: &train_batch_size 128 # !choice [32, 64, 128]
  batch_mode: complete_episodes
  model:
    fcnet_hiddens: !choice [[256,256], [128,128,128]] #[128,128,128] #
    fcnet_activation: !choice [relu, tanh] #relu #
  _enable_learner_api: False
  
rl_module:
  _enable_rl_module_api: False

explore:
  exploration_config:
    type: StochasticSampling

callbacks:
  callbacks: !CustomMetricsCallback

framework:
  framework: torch

multi_agent:
  policy_mapping_fn: !policy_mapping_fn
  policies_to_train: ["reinforcement_learning_policy"]
  count_steps_by: agent_steps

environment:
  env_config: &env_config_train
    env_type: new_env #old_env #
    shuffle_scenarios: True
    env_name: rte_case14_realistic_train
    action_space: tennet
    lib_dir: /Users/ericavandersar/Documents/Python_Projects/Research/mahrl_grid2op/ #/Users/barberademol/Documents/GitHub/mahrl_grid2op/ # /home3/s3374610/mahrl_grid2op/
    max_tsteps: *train_batch_size
    grid2op_kwargs:
      # general kwargs
      reward_class: !LossReward
    seed: *seed
    rho_threshold: 0.95
    n_history: 6
    input: [ "p_i", "r", "o", "d" ]
    danger: 0.9
    adj_matrix: False #use adjacency matrix instead of topology vector (is adj matrix useful for lin NN??)
    prio: True

env_config_val: &env_config_val
  <<: *env_config_train
  env_name: rte_case14_realistic_val
  shuffle_scenarios: False
  prio: False # should always be False

evaluation:
  evaluation_interval: 5
  evaluation_duration: 100 # as many as there are validation episodes -> len(os.listdir("/Users/ericavandersar/data_grid2op/rte_case14_realistic_val/chronics"))
  evaluation_duration_unit: episodes
  evaluation_config:
    explore: False,
    env_config: *env_config_val # use the validation environment

reporting:
  keep_per_episode_custom_metrics: True

resources:
  num_learner_workers: 1

rollouts:
  num_rollout_workers: 7

my_log_level: 1
