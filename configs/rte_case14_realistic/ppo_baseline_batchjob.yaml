setup:
  max_ep_len: 8064
  nb_timesteps: &nb_timesteps 3_000
  checkpoint_freq: 10
  verbose: 0
  storage_path: ./runs #/Users/barberademol/Documents/GitHub/mahrl_grid2op/runs/ #/home3/s3374610/mahrl_grid2op/runs/
  folder_name: "Case14_TestOnly"
  experiment_name: "Case14_Bla"
  optimize: True
  num_samples: 2
  score_metric: episode_len_mean
  grace_period: 10_000 # First 10_000 steps of training before stopping
  points_to_evaluate:
    gamma: 0.99
    num_sgd_iter: 16
    sgd_minibatch_size: 64
    train_batch_size: 512
    model/fcnet_hiddens: [256,256,256]
    model/fcnet_activation: relu


debugging:
  seed: &seed 14

training:
  checkpoint_trainable_policies_only: True
  # tunable parameters
  gamma: !quniform [0.95, 0.99, 0.001] #0.99 #
  lr: 0.0001 #!qloguniform [0.0001, 0.005, 0.0001] #
  vf_loss_coeff: 0.5
  kl_coeff: 0.2
  entropy_coeff: 0
  clip_param: 0.3 # epsilon
  lambda: 0.95
  vf_clip_param: 10
#  use_kl_loss: False # setting this similar to orig EVDS implementation
  num_sgd_iter: !quniform [4, 16, 4]
  sgd_minibatch_size: !choice [16, 32, 64] # 256 #
  train_batch_size: &train_batch_size !choice [64, 128, 256, 512] #1024 #
  batch_mode: complete_episodes
  model:
    fcnet_hiddens: !choice [[256,256], [128,128,128], [256,256,256]] #[256,256,256] #
    fcnet_activation: !choice [relu, tanh] #relu #
  _enable_learner_api: False

rl_module:
  _enable_rl_module_api: False

explore:
  exploration_config:
    type: StochasticSampling

callbacks:
  callbacks: !CustomMetricsCallback

framework:
  framework: torch

multi_agent:
  policy_mapping_fn: !policy_mapping_fn
  policies_to_train: ["reinforcement_learning_policy"]
  count_steps_by: agent_steps

environment:
  env_config: &env_config_train
    env_type: new_env #old_env #
    shuffle_scenarios: True
    env_name: rte_case14_realistic_train
    action_space: masked
    mask: 3
    lib_dir: !workdir
    grid2op_kwargs:
      # general kwargs
      reward_class: !LossReward
    seed: *seed
    rho_threshold: 0.90
    n_history: 6
    input: [ "p_i", "r", "o", "d" ]
    danger: 0.9
    adj_matrix: False #use adjacency matrix instead of topology vector (is adj matrix useful for lin NN??)
    prio: False
    normalize: True

env_config_val: &env_config_val
  <<: *env_config_train
  env_name: rte_case14_realistic_val
  shuffle_scenarios: False
  prio: False # should always be False

evaluation:
  evaluation_interval: 3
  evaluation_duration: 100 # as many as there are validation episodes -> len(os.listdir("/Users/ericavandersar/data_grid2op/rte_case14_realistic_val/chronics"))
  evaluation_duration_unit: episodes
  always_attach_evaluation_results: True
#  evaluation_parallel_to_training: True #Currently not working
  evaluation_num_workers: 4
  evaluation_config:
    explore: False,
    env_config: *env_config_val # use the validation environment

reporting:
  keep_per_episode_custom_metrics: True

scaling_config:
  num_workers: 4

resources:
  num_gpus: 0
  num_learner_workers: 4

rollouts:
  num_rollout_workers: 11

my_log_level: 1
